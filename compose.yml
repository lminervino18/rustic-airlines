services:
  seed:
    build: .
    volumes:
      - ./:/app
    environment:
      - SEED=192.168.0.100
    command: cargo run -p node_launcher 192.168.0.100
    networks:
      my-network:
        ipv4_address: 192.168.0.100
    ports:
      - "10000:17989"
    profiles:
      - initial-nodes
    container_name: seed

  node1:
    build: .
    volumes:
      - ./:/app
    environment:
      - SEED=192.168.0.100
    command: cargo run -p node_launcher 192.168.0.101
    depends_on:
      - seed
    networks:
      my-network:
        ipv4_address: 192.168.0.101
    ports:
      - "10001:17989"
    profiles:
      - initial-nodes
    container_name: node1

  node2:
    build: .
    volumes:
      - ./:/app
    environment:
      - SEED=192.168.0.100
    command: cargo run -p node_launcher 192.168.0.102
    depends_on:
     - seed
     - node1
    networks:
      my-network:
        ipv4_address: 192.168.0.102
    ports:
      - "10002:17989"
    profiles:
      - initial-nodes
    container_name: node2

  node3:
    build: .
    volumes:
      - ./:/app
    environment:
      - SEED=192.168.0.100
    command: cargo run -p node_launcher 192.168.0.103
    depends_on:
     - seed
     - node1
     - node2
    networks:
      my-network:
        ipv4_address: 192.168.0.103
    ports:
      - "10003:17989"
    profiles:
      - initial-nodes
    container_name: node3

  node4:
    build: .
    volumes:
      - ./:/app
    environment:
      - SEED=192.168.0.100
    command: cargo run -p node_launcher 192.168.0.104
    depends_on:
     - seed
     - node1
     - node2
     - node3
    networks:
      my-network:
        ipv4_address: 192.168.0.104
    ports:
      - "10004:17989"
    profiles:
      - initial-nodes
    container_name: node4

  node5:
    build: .
    volumes:
      - ./:/app
    environment:
      - SEED=192.168.0.100
    command: cargo run -p node_launcher 192.168.0.105
    networks:
      my-network:
        ipv4_address: 192.168.0.105
    ports:
      - "10005:17989"
    profiles:
      - new-node
    container_name: node5

networks:
  my-network:
    driver: bridge
    ipam:
      config:
        - subnet: 192.168.0.0/24
